version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    ports:.
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-init:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-init
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      sleep 10 &&
      echo 'Creating Kafka topics...' &&
      
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic raw-payments-emea --partitions 6 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic raw-payments-nam --partitions 3 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic raw-payments-aspac --partitions 3 --replication-factor 1 &&

      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic dlq-payments-emea --partitions 2 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic dlq-payments-nam --partitions 2 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic dlq-payments-aspac --partitions 2 --replication-factor 1 &&

      echo 'Kafka topic creation complete.'
      "

 mq-ingestion-emea:
    build:
      context: ./kafka-banking-standard/mq-ingestion-service
    container_name: mq-ingestion-emea
    env_file:
      - ../env/.env.emea
    volumes:
      - ../tls:/tls
    ports:
      - "8081:8081"
    depends_on:
      - kafka

  mq-ingestion-nam:
    build:
      context: ./kafka-banking-standard/mq-ingestion-service
    container_name: mq-ingestion-nam
    env_file:
      - ./env/.env.nam
    volumes:
      - ./tls:/tls
    ports:
      - "8082:8081"
    depends_on:
      - kafka

  mq-ingestion-aspac:
    build:
      context: ./kafka-banking-standard/mq-ingestion-service
    container_name: mq-ingestion-aspac
    env_file:
      - ./env/.env.aspac
    volumes:
      - ./tls:/tls
    ports:
      - "8083:8081"
    depends_on:
      - kafka

 dlq-replay-service:
    build:
      context: ./kafka-banking-standard/dlq-replay-service
    container_name: dlq-replay-service
    ports:
      - "8085:8085"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: dlq-replayer
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
    depends_on:
      - kafka
    networks:
      - kafka_net
    
  ibm-mq:
    image: ibmcom/mq:latest
    ports:
      - "1414:1414"
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: QM1
      MQ_APP_PASSWORD: passw0rd

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - mq-ingestion-emea
      - mq-ingestion-nam
      - mq-ingestion-aspac

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
      
networks:
  kafka_net:
    driver: bridge
